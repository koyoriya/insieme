name: Deploy to Firebase Staging

on:
  push:
    branches: [develop]
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
        
      # Build and deploy frontend
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
        
      # Build and deploy functions
      - name: Install functions dependencies
        working-directory: ./functions
        run: npm ci
        
      - name: Build functions
        working-directory: ./functions
        run: npm run build
        
      # Deploy to Firebase Staging
      - name: Deploy to Firebase Staging
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID_STAGING: ${{ secrets.FIREBASE_PROJECT_ID_STAGING }}
          GEMINI_API_KEY_STAGING: ${{ secrets.GEMINI_API_KEY_STAGING }}
        run: |
          # Set functions environment variables for staging
          firebase functions:config:set gemini.api_key="${GEMINI_API_KEY_STAGING}" --project ${FIREBASE_PROJECT_ID_STAGING} --token ${FIREBASE_TOKEN}
          
          # Deploy hosting and functions to staging
          firebase deploy --project ${FIREBASE_PROJECT_ID_STAGING} --token ${FIREBASE_TOKEN}